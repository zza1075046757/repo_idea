<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lagou.dao.RoleMapper">
    <!--角色列表查询&条件查询-->
    <select id="findAllRole" parameterType="Role" resultType="Role">
        select * from roles
        <where>
            <if test="name!=null and name!=''">
                name=#{name}
            </if>
        </where>
    </select>

    <!--添加角色-->
    <insert id="saveRole" parameterType="Role">
        insert into roles values
        (null,#{code},#{name},#{description},
        #{createdTime},#{updatedTime},#{createdBy},#{updatedBy})
    </insert>

    <!--修改角色-->
    <update id="updateRole" parameterType="Role">
        update roles
        <trim prefix="set" suffixOverrides=",">
            <if test="code!=null">
                code=#{code},
            </if>
            <if test="name!=null and name!=''">
                name=#{name},
            </if>
            <if test="description!=null and description!=''">
                description=#{description},
            </if>
            <if test="updatedTime!=null">
                updated_time=#{updatedTime},
            </if>
            <if test="updatedBy!=null ">
                updated_by=#{updatedBy},
            </if>
        </trim>
        where id=#{id}
    </update>

    <!--根据角色ID查询关联的菜单信息-->
    <select id="findMenuByRoleId" resultType="int" parameterType="int">
       SELECT m.`id`FROM roles r LEFT JOIN role_menu_relation rm ON r.id =
rm.`role_id`LEFT JOIN menu m ON rm.`menu_id` = m.`id` WHERE r.id = #{id}

    </select>

    <!--清空角色菜单关联关系-->
    <delete id="deleteRoleContextMenu" parameterType="int">
        delete from role_menu_relation where role_id=#{id}
    </delete>

    <!--为角色分配菜单-->
    <insert id="roleContextMenu" parameterType="Role_menu_relation">
        insert into   role_menu_relation values  (null,#{menuId},#{roleId},
        #{createdTime},#{updatedTime},#{createdBy},#{updatedBy})
    </insert>

    <!--删除角色-->
    <delete id="deleteRole" parameterType="int">
        delete from roles where id=#{id}
    </delete>

    <!--查询当前角色拥有的资源分类-->
    <select id="findResourceCategoryById" parameterType="int" resultType="ResourceCategory">
        select distinct rc.* from
          roles r inner join role_resource_relation rrr on r.id=rrr.role_id
          inner join resource r2 on r2.id=rrr.resource_id
            inner join resource_category rc on r2.category_id=rc.id
          where r.id=#{id}
    </select>

    <!--查询资源表的具体资源-->
        <select id="findResourceById" parameterType="int" resultType="Resource">
             select r.* from
          resource r inner join resource_category rc
          on r.category_id=rc.id
          where  rc.id=#{id}
        </select>


    <!--清空角色、资源中间表-->
    <delete id="deleteRoleResourceRelation" parameterType="int">
        delete from role_resource_relation where role_id=#{id}
    </delete>

    <!--为角色分配资源-->
    <insert id="roleContextResource" parameterType="RoleResourceRelation" >
        insert into  role_resource_relation values  (null,#{resourceId},#{roleId},
        #{createdTime},#{updatedTime},#{createdBy},#{updatedBy})
    </insert>




</mapper>